import streamlit as st
from openai import OpenAI
from elevenlabs import generate, save, set_api_key
import os

# ========================
# Chaves de API (modo seguro via Secrets)
# ========================

openai_key = st.secrets["OPENAI_API_KEY"]
eleven_key = st.secrets["ELEVEN_API_KEY"]

# ========================
# Inicializar cliente OpenAI
# ========================

client_openai = OpenAI(api_key=openai_key)

# ========================
# Fun√ß√£o para gerar o roteiro com GPT
# ========================

def gerar_roteiro(titulo):
    prompt = f"Crie um roteiro b√≠blico completo para um v√≠deo animado de 8 a 10 minutos com o t√≠tulo: '{titulo}', incluindo cenas visuais, falas e efeitos sonoros."
    resposta = client_openai.chat.completions.create(
        model="gpt-4o",
        messages=[{"role": "user", "content": prompt}]
    )
    return resposta.choices[0].message.content

# ========================
# Fun√ß√£o para gerar a narra√ß√£o com ElevenLabs
# ========================

def gerar_narracao(roteiro):
    set_api_key(eleven_key)
    audio = generate(
        text=roteiro,
        voice="Rachel"
    )
    filename = "narracao.mp3"
    save(audio, filename)
    return filename

# ========================
# Interface com o usu√°rio
# ========================

st.title("üé¨ Gerador B√≠blico com IA")

titulo = st.text_input("Digite o t√≠tulo da hist√≥ria b√≠blica")

if st.button("Gerar Roteiro"):
    if titulo:
        with st.spinner("Gerando roteiro..."):
            roteiro = gerar_roteiro(titulo)
            st.success("üìú Roteiro gerado!")
            st.text_area("Roteiro completo:", roteiro, height=400)

            with st.spinner("Gerando narra√ß√£o..."):
                audio_path = gerar_narracao(roteiro)
                st.audio(audio_path, format="audio/mp3")
                st.success("üîä Narra√ß√£o gerada!")
    else:
        st.warning("Por favor, digite um t√≠tulo.")
